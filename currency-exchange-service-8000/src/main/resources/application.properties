
spring.application.name=currency-exchange-service
server.port=8000

eureka.client.service-url.default-zone=http://localhost:8761/eureka

spring.main.banner-mode=off
spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.dbcp2.test-on-borrow=true
spring.jpa.properties.hibername.cache.use_second_level_cache: false
spring.jpa.properties.hibername.cache.use_query_cache: false
spring.jpa.properties.hibername.generate_statistics: false


# Username and password
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
#spring.datasource.initialization-mode=always

## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
